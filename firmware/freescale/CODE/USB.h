/** ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename  : USB.h
**     Project   : rapidradioUSB
**     Processor : MC9S08JS16CWJ
**     Component : Init_USB
**     Version   : Component 01.008, Driver 01.05, CPU db: 3.00.015
**     Compiler  : CodeWarrior HCS08 C Compiler
**     Date/Time : 2015-09-19, 00:58
**     Abstract  :
**          This file implements the USB (USB) module initialization
**          according to the Peripheral Initialization Component settings, and defines
**          interrupt service routines prototypes.
**          The universal serial bus (USB) module supports full-speed (FS) USB device 
**          according to the Universal Serial Bus Specification Rev. 2.0.

**     Settings  :
**          Component name                                 : USB
**          Device                                         : USB
**          Voltage regulator                              : Enabled
**          PHY transceiver                                : Enabled
**          Endpoint 0:
**            Endpoint control                             : no
**            Receive enable                               : no
**            Transmit enable                              : no
**            Stall                                        : no
**            Handshake                                    : no
**          Endpoint 1:
**            Endpoint control                             : no
**            Receive enable                               : no
**            Transmit enable                              : no
**            Stall                                        : no
**            Handshake                                    : no
**          Endpoint 2:
**            Endpoint control                             : no
**            Receive enable                               : no
**            Transmit enable                              : no
**            Stall                                        : no
**            Handshake                                    : no
**          Endpoint 3:
**            Endpoint control                             : no
**            Receive enable                               : no
**            Transmit enable                              : no
**            Stall                                        : no
**            Handshake                                    : no
**          Endpoint 4:
**            Endpoint control                             : no
**            Receive enable                               : no
**            Transmit enable                              : no
**            Stall                                        : no
**            Handshake                                    : no
**          Endpoint 5:
**            Endpoint control                             : no
**            Receive enable                               : no
**            Transmit enable                              : no
**            Stall                                        : no
**            Handshake                                    : no
**          Endpoint 6:
**            Endpoint control                             : no
**            Receive enable                               : no
**            Transmit enable                              : no
**            Stall                                        : no
**            Handshake                                    : no
**          USBDP pin pull-up                              : Enabled
**          Interrupts
**            Stall interrupt                              : Disabled
**            Resume interrupt                             : Disabled
**            Sleep interrupt                              : Disabled
**            Token complete interrupt                     : Disabled
**            Start of frame interrupt                     : Disabled
**            USB reset interrupt                          : Disabled
**            Error interrupt                              : Disabled
**              Bit stuff Error interrupt                  : Disabled
**              Buffer Error interrupt                     : Disabled
**              Bus turnaround Error interrupt             : Disabled
**              Data field Error interrupt                 : Disabled
**              CRC16 Error interrupt                      : Disabled
**              CRC5 Error interrupt                       : Disabled
**              PID Error interrupt                        : Disabled
**          ISR name                                       : USB_ISR
**          Call Init method                               : yes
**          USB module Enable                              : yes
**     Contents  :
**         Init - void USB_Init(void);
**
**     Copyright : 1997 - 2010 Freescale Semiconductor, Inc. All Rights Reserved.
**     
**     http      : www.freescale.com
**     mail      : support@freescale.com
** ###################################################################*/

#ifndef __USB
#define __USB

/* MODULE USB. */

/*Include shared modules, which are used for whole project*/
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
/* Include inherited components */

#include "Cpu.h"




void USB_Init(void);
/*
** ===================================================================
**     Method      :  USB_Init (component Init_USB)
**
**     Description :
**         This method initializes registers of the USB module
**         according to this Peripheral Initialization Component settings.
**         Call this method in user code to initialize the module.
**         By default, the method is called by PE automatically; see
**         "Call Init method" property of the component for more details.
**     Parameters  : None
**     Returns     : Nothing
** ===================================================================
*/

/*
** ===================================================================
** The interrupt service routine must be implemented by user in one
** of the user modules (see USB.c file for more information).
** ===================================================================
*/
__interrupt void USB_ISR(void);
/* END USB. */

#endif /* ifndef __USB */
/*
** ###################################################################
**
**     This file was created by Processor Expert 3.09 [04.41]
**     for the Freescale HCS08 series of microcontrollers.
**
** ###################################################################
*/
